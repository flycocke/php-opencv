--TEST--
split test
--SKIPIF--
<?php if (!extension_loaded("opencv")) print "skip"; ?>
--FILE--
<?php

use function CV\{
    imread, split,waitKey,imshow
};
use const CV\{CV_8UC3};
use CV\{Mat,Scalar,Formatter};

$srcImage = new Mat(10,10,CV_8UC3,new Scalar(10,11,12));
list($b,$g,$r) = split($srcImage);
$srcImage->print(Formatter::FMT_PYTHON);
$b->print(Formatter::FMT_PYTHON);
$g->print(Formatter::FMT_PYTHON);
$r->print(Formatter::FMT_PYTHON);
--EXPECT--
[[[ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12]],
 [[ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12]],
 [[ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12]],
 [[ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12]],
 [[ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12]],
 [[ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12]],
 [[ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12]],
 [[ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12]],
 [[ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12]],
 [[ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12], [ 10,  11,  12]]]
[[ 10,  10,  10,  10,  10,  10,  10,  10,  10,  10],
 [ 10,  10,  10,  10,  10,  10,  10,  10,  10,  10],
 [ 10,  10,  10,  10,  10,  10,  10,  10,  10,  10],
 [ 10,  10,  10,  10,  10,  10,  10,  10,  10,  10],
 [ 10,  10,  10,  10,  10,  10,  10,  10,  10,  10],
 [ 10,  10,  10,  10,  10,  10,  10,  10,  10,  10],
 [ 10,  10,  10,  10,  10,  10,  10,  10,  10,  10],
 [ 10,  10,  10,  10,  10,  10,  10,  10,  10,  10],
 [ 10,  10,  10,  10,  10,  10,  10,  10,  10,  10],
 [ 10,  10,  10,  10,  10,  10,  10,  10,  10,  10]]
[[ 11,  11,  11,  11,  11,  11,  11,  11,  11,  11],
 [ 11,  11,  11,  11,  11,  11,  11,  11,  11,  11],
 [ 11,  11,  11,  11,  11,  11,  11,  11,  11,  11],
 [ 11,  11,  11,  11,  11,  11,  11,  11,  11,  11],
 [ 11,  11,  11,  11,  11,  11,  11,  11,  11,  11],
 [ 11,  11,  11,  11,  11,  11,  11,  11,  11,  11],
 [ 11,  11,  11,  11,  11,  11,  11,  11,  11,  11],
 [ 11,  11,  11,  11,  11,  11,  11,  11,  11,  11],
 [ 11,  11,  11,  11,  11,  11,  11,  11,  11,  11],
 [ 11,  11,  11,  11,  11,  11,  11,  11,  11,  11]]
[[ 12,  12,  12,  12,  12,  12,  12,  12,  12,  12],
 [ 12,  12,  12,  12,  12,  12,  12,  12,  12,  12],
 [ 12,  12,  12,  12,  12,  12,  12,  12,  12,  12],
 [ 12,  12,  12,  12,  12,  12,  12,  12,  12,  12],
 [ 12,  12,  12,  12,  12,  12,  12,  12,  12,  12],
 [ 12,  12,  12,  12,  12,  12,  12,  12,  12,  12],
 [ 12,  12,  12,  12,  12,  12,  12,  12,  12,  12],
 [ 12,  12,  12,  12,  12,  12,  12,  12,  12,  12],
 [ 12,  12,  12,  12,  12,  12,  12,  12,  12,  12],
 [ 12,  12,  12,  12,  12,  12,  12,  12,  12,  12]]